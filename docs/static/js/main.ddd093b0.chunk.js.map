{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExperApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAG1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAG3BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCDPO,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGrC,OADAc,QAAQC,IAAI,CAACN,KAAIC,QAAOV,QAEpB,sBAAKgB,UAAU,6CAAf,cACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCDHS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAUtB,ECdwB,SAAEA,GAE1B,MAA0Bd,mBAAU,CAChCqB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KA4BA,OAvBAC,qBAAU,WAEN1B,EAASC,GACJ0B,MAAM,SAAAC,GACHH,EAAU,CACNjB,KAAMoB,EACNL,SAAS,SAItB,CAAEtB,IAaEuB,EDhB2BK,CAAa5B,GAAjCa,EAAd,EAAQN,KAAce,EAAtB,EAAsBA,QAKtB,OACI,qCACI,oBAAIJ,UAAU,wCAAd,SAAuDlB,IACtDsB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAEQL,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEjBxBkB,EAAc,WAGvB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAOA,OACI,gCACI,6CAEA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAIA,6BAKQ6C,EAAWrB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADJA,Y,MClBlC+B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ddd093b0.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n    //const [inputValue, setInputValue] = useState();// esto da error, porque es undefined\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        // console.log(e.target.value);\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim().length > 2) { //evita la categoría vacía\n            // console.log(setCategories)\n            //setCategories((c) => {[...c, e]});\n            setCategories((cats) => [inputValue, ...cats]);\n            setInputValue(''); // evita el escribir dos veces lo mismo initencionadamente\n        }\n\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","\n\n\nexport const getGifs = async ( category ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=zkUS2vUBGws9ne3pbFWMT0xpKk3Xj6sV`\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n    //setImages(gifs) //  gifs es una lista de objetos con id, title y url.\n}\n\n// getGifs();","import React from 'react'\n\nexport const GifGridItem = ( {id, title, url} ) => {\n \n    console.log({id, title, url})\n    return (\n        <div className=\"card animate__animated animate__fadeInDown\"> {/*class puede ser para html o para JS, así que la han cambiado a className para estar seguros*/}\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n        </div>\n    )\n}\n// class=\"animate__animated animate__bounce animate__delay-2s\"\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\n// import React, { useState, useEffect } from 'react'\n// import { getGifs } from '../helpers/getGifs'\nimport { GifGridItem } from './GifGridItem'\n\n\nexport const GifGrid = ({ category }) => {\n\n    // const [images, setImages] = useState([])\n\n    // useEffect(() => {\n    //     getGifs( category )\n    //     .then( setImages ); // esto es lo mismo que .then( imgs => setImages( imgs ))\n    // }, [ category ]) //aquí se pasa una lista de dependencias, y si no tiene no lanza otras peticiones \n    //                     // si la categoría cambia se dispara otra vez.    \n\n    const { data: images, loading } = useFetchGifs(category);\n\n    // console.log(loading);\n    // console.log(data);\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeInDown\">{category}</h3>\n            {loading && <p className='animate__animated animate__flash'>Loading</p> /*solo hace algo si está cargando*/}\n            <div className='card-grid'>\n                {\n                    images.map(img => (\n                        <GifGridItem\n                            key={img.id}\n                            {...img}\n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState( {\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => { //los efectos no pueden ser async, pero la respuesta getGifs si es una promesa\n\n        getGifs( category )\n            .then( imgs => {\n                setState( {\n                    data: imgs,\n                    loading: false\n                });\n            })\n\n    }, [ category ])\n        // useEffect(() => {\n    //     getGifs( category )\n    //     .then( setImages ); // esto es lo mismo que .then( imgs => setImages( imgs ))\n    // }, [ category ]) //aquí se pasa una lista de dependencias, y si no tiene no lanza otras peticiones \n    //                     // si la categoría cambia se dispara otra vez.  \n\n    // setTimeout( () => {\n    //     setState ( {\n    //         data: [1,2,3,4,5,6,7],\n    //         loading : false\n    //     })\n    // }, 3000)\n    return state; // {data:[], loading:true};\n}\n\n","import React, { useState } from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\n\n// export function GifExperApp() {\n\n//     return (\n//         <>\n//             <h2> GifExpertApp</h2>\n//             <hr />\n//         </>);\n// }\n\nexport const GifExperApp = () => {\n\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball']\n    const [categories, setCategories] = useState(['One Punch'])\n\n    // const handleAdd = () => {\n    //     // setCategories((c) => [...c,'HunterXHunter']);\n    // setCategories([...categories, 'HunterXHunter']);\n    // }\n\n    return (\n        <div>\n            <h2>GifExperApp</h2>\n            {/* <AddCategory setCategories={setCategories} /> */}\n            <AddCategory setCategories={setCategories} />\n            <hr />\n\n            {/* <button onClick={handleAdd}>Aregar</button> */}\n\n            <ol>\n                {\n                    // categories.map(category => {\n                    //     return <li key={category}> {category} </li>\n                    // })\n                    categories.map(category => (\n                        <GifGrid\n                            key={ category}\n                            category={category}\n                        />\n                    ))\n                    // <li key={category}> {category} </li>)\n                }\n\n            </ol>\n\n\n\n        </div>\n    );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExperApp } from './GifExpertApp';\nimport './index.css';\n\n\n// ReactDOM.render(\n//     <GifExperApp />,\n//   document.getElementById('root')\n// );\n\n\n// GifExperApp\n// <h2\n\n\n// const divRoot = document.querySelector('#root');\n\n// ReactDOM.render(<GifExperApp />, divRoot);\n// ReactDOM.render(<PrimeraApp saludo=\"Hola soy Goku\" />, divRoot);\n\nReactDOM.render(\n    <GifExperApp />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}